getwd ()
plotTree (tree,offset = 1)
install.packages('ape')
library (abe)
install.packages('phytools')
install.packages('ape')
library (abe)
install.packages('phytools')
library (phytools)
tree <- read.tree (plot (tree, type = "fan"))
tree <- read.tree (type = "fan")
tree <- read.tree (text= "(((A,B), (C,D)), E);")
plot (tree, type = "fan")
tree
#'There are 5 tips, and when I print tree it tells me there are no branch lengths and that it is rooted.'
data <- read.csv ("https://jonsmitchell.com/data/svl.csv", stringsAsFactors = F, row.names = 1)
data
View(data)
#'This data should be a list, it has one row names with their associated value beside them.'
svl <- setNames (data$svl, rownames (data))
Ancestors <- fastAnc (tree, svl, vars = TRUE, CI = TRUE)
tree <- AnolisTree <- force.ultrametric (read.tree ("https://jonsmitchell.com/data/anolis.tre"))
plot (tree, type = "fan")
tree
Ancestors <- fastAnc (tree, svl, vars = TRUE, CI = TRUE)
Ancestors
?fastAnc
#'The estimated values are stored in the object Ancestors which is a object of class fastAnc.'
#'The CI95 element is, well the CI element lets you choose if you want to do a 95 percent confidence interval on state estimates.'
#'Two asumptions made by fastAnc are that "the state computed for the root node of the tree during Felesenstein's (1985) contrasts algorithm is also the MLE of the root node" and that the trait is continious".'
par (mar = c (0.1, 0.1, 0.1, 0.1))
plot (tree, type = "fan", lwd = 2, show.tip.label = F)
tiplabels (pch = 16, cex = 0.25 * svl [tree$tip.label])
nodelabels (pch = 16, cex = 0.25 * svl [tree$tip.label])
obj <- contMap (tree, svl, plot=F)
plot (obj, type = "fan", legend = 0.7 * max (nodeHeights(tree)), sig = 2, fsize = c (0.7, 0.9))
fossilData <- data.frame (svl = log (c ( 25.4, 23.2, 17.7, 19.7, 24, 31)), tip1 = c ("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2 = c ("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
for (i in 3:ncol (fossil)) {
fossilNodes <- c()
NodeN <- c ()
node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
}
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
NodeN <- c ()
node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
}
node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
NodeN <- c ()
node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
}
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
NodeN <- c ()
Node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
}
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
nodeN <- c ()
Node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
}
Ancestors_withFossils <- fastAnc (tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
names (fossilNodes) <- nodeN
Ancestors_withFossils <- fastAnc (tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors_withFossils <- fastAnc (tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
#'Code for for () loop below.'
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
nodeN <- c ()
Node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
names (fossilNodes) <- nodeN
}
Ancestors_withFossils <- fastAnc (tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
(tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors_withFossils <- fastAnc(tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors_withFossils <- fastAnc (tree, svl, anc.states = fossilNodes, CI = TRUE, var = TRUE)
Ancestors_withFossils <- fastAnc (tree, svl, anc.states = fossilNodes, CI = TRUE, var = TRUE)
#'Code for for () loop below.'
for (i in 3:ncol (fossilNodes)) {
fossilNodes <- c()
nodeN <- c ()
Node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
names (fossilNodes) <- nodeN
}
#'Code for for () loop below.'
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
nodeN <- c ()
Node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
names (fossilNodes) <- nodeN
}
Ancestors_withFossils <- fastAnc (tree, svl, anc.states = fossilNodes, CI = TRUE, var = TRUE)
Ancestors_withFossils <- fastAnc (tree, svl, anc.states = fossilNodes, CI=TRUE, var=TRUE).
Ancestors_withFossils <- fastAnc (tree, svl, anc.states = fossilNodes, CI=TRUE, var=TRUE)
#'Code for for () loop below.'
for (i in 3:ncol (fossilData)) {
fossilNodes <- c()
nodeN <- c ()
Node <- fastMRCA (tree, fossilData [i, "tip1"], fossilData [i, "tip2"])
fossilNodes[i] <- fossilData [i, "svl"]
nodeN[i] <- Node
names (fossilNodes) <- nodeN
}
fossilNodes <- C()
fossilNodes <- C()
fossilNodes <- C()
for () {
{
for (i in 1:nrow (fossilData))
i <- 1 if (i == 1) {
print (Ancestors)}
}
#'Code for for () loop below.'
fossilNodes <- C()
nodeN <- c()
#'Code for for () loop below.'
fossilNodes <- C()
nodeN <- c()
{
for (i in 1:nrow (fossilData))
i <- 1 if (i == 1) {
print (Ancestors)}
}
{
for (i in 1:nrow (fossilData))
i <- 1
if (i == 1) {
print (Ancestors)}
}
Ancestors_withFossils <- fastAnc (tree, svl, anc.states = fossilNodes, CI=TRUE, var=TRUE)
#'Code for for () loop below.'
fossilNodes <- C()
